////////////////////////////////////////////////////
//////////////// SPECTRE DEMON /////////////////////
////////////////////////////////////////////////////

////////////////////////////////////////////////////
////  Includes

//#include "Decorate/PlayerClasses/BaseEmpathyPlayer.txt"

////////////////////////////////////////////////////
////  Defines / Variables

const int SpectreInvisibilityFillTime = 525; //15 seconds
const int SpectreInvisibilityTime = 1050; //30 seconds (35 ticks/sec) 0-5s x1dmg, 5-10s x2dmg, 10-15s x3dmg, 15-20s x4dmg, +20s x5dmg

const int SpectreBackstabBaseDamage = 10;

const int SpectreBackstabMultiplierInterval = 175; //every how many ticks invisibility attack increases in damage
const int SpectreMaxDamageMultiplier = 5;

const int SpectreMultiplierCutoff1 = 175; //beyond this ammount of SpectreInvisibilityMultiplierCounter, deal x2 damage
const int SpectreMultiplierCutoff2 = 350; //beyond this ammount deal x3 damage
const int SpectreMultiplierCutoff3 = 525; //beyond this ammount deal x4 damage
const int SpectreMultiplierCutoff4 = 700; //beyond this ammount deal x5 damage

//const int SpectreBackstabRevealTime = 175;  //5 seconds, for how long the player will become totally visible after a backstab attack

////////////////////////////////////////////////////
////  Player actor class

actor SpectrePlayer : BaseEmpathyPlayer
{
  Speed 0.8
	Health 150
	Radius 24 //30
	Height 56
	Mass 400
	PainChance 255
	player.jumpz 8
	player.maxhealth 150
	player.soundclass "SpectrePlayerSnd"
	player.morphweapon "SpectreJaws"
	Player.ColorRange 0, 0
	Player.DisplayName "Spectre Demon"
	Player.StartItem "SpectreJaws"
	Player.StartItem "PlayerIsSpectre"
	Player.StartItem "SpectreMana", 525
        
	States
	{
	Spawn:
		SARG A 7
		//SARG A 0 A_GiveInventory ("SpectreMana", ManaRegenBase)
		SARG B 7
		//SARG B 0 A_GiveInventory ("SpectreMana", ManaRegenBase)
		Loop
	See:
		SARG AABBCCDD 2
		Loop
	Melee:
	Missile:
		SARG EF 8
 		SARG G 8
		Goto Spawn
	Pain:
		SARG H 2
    SARG H 2 A_Pain
		Goto Spawn
	Death:
		SARG I 8 A_PlayerSkinCheck("AltSkinDeath")
		SARG J 8 A_PlayerScream
		SARG K 4
		SARG L 4 A_NoBlocking
    		SARG M 4
    		SARG N -1
		Stop
	XDeath:
		goto death
	AltSkinDeath:
		SARG I 8
    		SARG J 8 A_PlayerScream
    		SARG K 4
    		SARG L 4 A_NoBlocking
    		SARG M 4
    		SARG N -1
		Stop
	}
}

////////////////////////////////////////////////////
////  Weapon(s) Actor Class
 
actor SpectreJaws : weapon
{
  radius 20
  height 20
  obituary "o% didn't see k% in time"
  inventory.pickupmessage "Spectre!!"
  attacksound ""
  weapon.selectionorder 3000
  weapon.kickback 400
  weapon.ammotype1 "SpectreMana"
  weapon.ammotype2 "SpectreInvisibilityTimer"
  weapon.ammouse1 -128
  weapon.ammouse2 0 //1050
  weapon.ammogive 0
  +WEAPON.NOALERT
  +WEAPON.DONTBOB
  +WEAPON.AMMO_OPTIONAL
  +WEAPON.ALT_AMMO_OPTIONAL
  +WEAPON.NODEATHDESELECT
  
  States
  {
    Deselect: 
      DEMH A -1	//the deselect state is an infinite static loop to avoid horns from disappearing after death
      Goto Ready	   //a little crappy, but produces a quite good effect (no need to say the danger of allowing weapon switch)

    Select:
      DEMH A 1
      Goto Ready

    Ready:
      DEMH A 0 A_JumpIfInventory ("PowerSpectreStealthPower", 1, "ReadyStealth")
      Goto ReadyVisible

    ReadyVisible:
      DEMH A 2 A_WeaponReady
      DEMH A 0 A_GiveInventory ("SpectreMana", 2)
      Goto Ready

    ReadyStealth:
      DEMH A 0 {
        //if we have invisibility time left, decrease invisibility timer
        if (A_JumpIfInventory("SpectreInvisibilityTimer", 1, "Null")) {
          A_TakeInventory ("SpectreInvisibilityTimer", 2);
          A_GiveInventory ("SpectreInvisibilityMultiplierCounter", 2);
        }
        else {
          A_TakeInventory ("PowerSpectreStealthPower", 0x7fffffff);
        }
      }
      DEMH A 2 A_WeaponReady
      Goto Ready

    Fire:
      DEMH A 8 A_PlaySoundEx ("demon/melee", "Weapon")
      DEMH A 0 A_JumpIfInventory ("PowerSpectreStealthPower", 1, "FireStealth")
      Goto FireVisible

    FireVisible:
      DEMH A 8 { 
        A_CustomPunch (5, false, (CPF_USEAMMO | CPF_PULLIN), "BulletPuff", 80, 0.0);
        //if above maximum ammo, reset ammo count before proceeding
        If (A_JumpIfInventory("SpectreMana", (SpectreInvisibilityFillTime + 1), "Null")) {
          A_TakeInventory("SpectreMana", 0x7fffffff);
          A_GiveInventory("SpectreMana", SpectreInvisibilityFillTime);
        }
      }
      DEMH A 16 
      DEMH A 0 A_ReFire
      Goto Ready

    FireStealth:
      DEMH A 0 {
        A_TakeInventory ("PowerSpectreStealthPower", 0x7fffffff);   //first remove invisibility

        //deal damage according to accumulated multiplier
        if (A_JumpIfInventory("SpectreInvisibilityMultiplierCounter", SpectreMultiplierCutoff4, "Null")) {  //x5 damage
          A_CustomPunch (SpectreBackstabBaseDamage * 5 * random(1, 4), true, (CPF_PULLIN), "BulletPuff", 96, 0.0);
        }
        else if (A_JumpIfInventory("SpectreInvisibilityMultiplierCounter", SpectreMultiplierCutoff3, "Null")) {  //x4 damage
          A_CustomPunch (SpectreBackstabBaseDamage * 4 * random(1, 4), true, (CPF_PULLIN), "BulletPuff", 96, 0.0);
        }
        else if (A_JumpIfInventory("SpectreInvisibilityMultiplierCounter", SpectreMultiplierCutoff2, "Null")) {  //x3 damage
          A_CustomPunch (SpectreBackstabBaseDamage * 3 * random(1, 4), true, (CPF_PULLIN), "BulletPuff", 96, 0.0);
        }
        else if (A_JumpIfInventory("SpectreInvisibilityMultiplierCounter", SpectreMultiplierCutoff1, "Null")) {  //x2 damage
          A_CustomPunch (SpectreBackstabBaseDamage * 2 * random(1, 4), true, (CPF_PULLIN), "BulletPuff", 96, 0.0);
        }
        else {  //x1 damage
          A_CustomPunch (SpectreBackstabBaseDamage * random(1, 4), true, (CPF_PULLIN), "BulletPuff", 96, 0.0);
        }

        A_TakeInventory ("SpectreMana", 0x7fffffff); //Zero-reset invisibility timer and mana
        A_TakeInventory ("SpectreInvisibilityTimer", 0x7fffffff);
        A_TakeInventory ("SpectreInvisibilityMultiplierCounter", 0x7fffffff); //Also zero-reset multiplier counter
      }
      DEMH A 8
      DEMH A 16
      DEMH A 0 A_ReFire
      Goto Ready

    AltFire:
      DEMH A 0 A_JumpIfInventory ("SpectreMana", SpectreInvisibilityFillTime, 3) //check if enough mana to go invisible. If not, jump back to ready
        DEMH A 8 A_PlaySoundEx ("demon/active", "Weapon")
        DEMH A 0 A_Jump(256, "Ready")

      DEMH A 0 {
        //take away the corresponding mana, give invisibility, and initialize invisibility timer ammo
        A_PlaySoundEx ("demon/sight", "Weapon");
        A_GiveInventory ("PowerSpectreStealthPower",1);
        A_TakeInventory ("SpectreMana", 0x7fffffff);
        A_TakeInventory ("SpectreInvisibilityTimer", 0x7fffffff); //take all of the leftover timer to force zero-reset
        A_GiveInventory ("SpectreInvisibilityTimer", SpectreInvisibilityTime);
        A_TakeInventory ("SpectreInvisibilityMultiplierCounter", 0x7fffffff); //Also zero-reset multiplier counter
      }
      DEMH A 8
      goto Ready
  }
}


////////////////////////////////////////////////////
////  Powerup classes

ACTOR PowerSpectreStealthPower : PowerInvisibility
{
  +SHADOW
  +CANTSEEK
  Powerup.Duration 0x7FFFFFFF
  Powerup.Strength 0x7FFFFFFF
  Powerup.Mode "Cumulative"
  Powerup.Color cyan 0.15
}


////////////////////////////////////////////////////
////  Ammo actor classes

actor SpectreMana : ammo
{
  inventory.amount 525
  inventory.maxamount 525
  inventory.icon "MANAA0"
  RENDERSTYLE TRANSLUCENT
  ALPHA 0.5

  states
  {
    Spawn:
      MANA ABC 5
      loop
  }
}

actor SpectreInvisibilityTimer : ammo
{
  inventory.amount 0
  inventory.maxamount 2100
  inventory.icon "MANAB0"
  RENDERSTYLE TRANSLUCENT
  ALPHA 0.5

  states
  {
    Spawn:
      MANA ABC 5
      loop
  }
}

actor SpectreInvisibilityMultiplierCounter : ammo
{
  inventory.amount 0
  inventory.maxamount 2100
  inventory.icon "MANAB0"
  RENDERSTYLE TRANSLUCENT
  ALPHA 0.5

  states
  {
    Spawn:
      MANA ABC 5
      loop
  }
}